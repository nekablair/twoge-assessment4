---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: taneka
spec:
  replicas: 1
  selector:
    matchLabels: # This is the label that the deployment will use to select the pods it manages
      app: twoge-postgres
  template: # This is the pod template that the deployment will use to create new pods
    metadata:
      labels:
        app: twoge-postgres # This is the label that the pod will use to identify itself
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          # volumeMounts:
          #   - name: taneka-storage-twoge
          #     mountPath: /var/lib/postgresql
          resources:
            requests:
              cpu: "100m"
              memory: "100Mi"
            limits:
              cpu: "200m"
              memory: "200Mi"
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: DB_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: DB_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: DATABASE_NAME
            # - name: PGDATA  # This will tell PostgreSQL to use the subdirectory
            #   value: /var/lib/postgresql/pgdata
          startupProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  pg_isready -q -d $POSTGRES_DB -U $POSTGRES_USER
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 30
            successThreshold: 1
            failureThreshold: 3
      # volumes:
      #   - name: taneka-storage-twoge
      #     persistentVolumeClaim:
      #       claimName: db-pvc