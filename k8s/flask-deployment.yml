---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deployment
  namespace: taneka
spec:
  selector:
    matchLabels: # This is the label that the deployment will use to select the pods it manages
      app: twoge
  replicas: 2
  template: # This is the pod template that the deployment will use to create new pods
    metadata:
      labels:
        app: twoge # This is the label that the pod will use to identify itself
    spec:
      containers:
        - name: twoge-assessment4
          image: nekadev/twoge:latest
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"
          env:
            - name: DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: DATABASE_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: DB_PASSWORD
            - name: DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: DATABASE_PORT
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: DATABASE_HOST
            - name: DATABASE_TYPE
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: DATABASE_TYPE
            - name: SQLALCHEMY_DATABASE_URI
              value: "$(DATABASE_TYPE)://$(DB_USER):$(DB_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)"
          startupProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 3